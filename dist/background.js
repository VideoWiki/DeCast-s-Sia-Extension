(()=>{async function e(){try{const e="https://api.blocknative.com/gasprices/blockprices?confidenceLevels=99&confidenceLevels=90&confidenceLevels=80&confidenceLevels=60",o=await fetch(e),s=await o.json();if(s&&s.blockPrices){const e=s.blockPrices[0].estimatedPrices,o=e.find((e=>90===e.confidence));o&&(c(o.price),chrome.storage.local.set({gasPrices:e}),chrome.runtime.sendMessage({action:"updateGasPrices"}))}else console.error("No gas price data available")}catch(e){console.error("Error fetching gas prices:",e)}}function c(e){chrome.action.setBadgeText({text:e.toString()}),chrome.action.setBadgeBackgroundColor({color:"#ffffff"})}chrome.runtime.onMessage.addListener((function(c,o,s){if("getLocalStorage"===c.action)return chrome.storage.local.get(["accessToken","userInfo"],(function(e){e.accessToken&&e.userInfo?s({accessToken:e.accessToken,userInfo:e.userInfo}):chrome.tabs.query({},(function(e){let c=null;for(let o of e)if(o.url.includes("https://decast.live/")){c=o;break}c?chrome.scripting.executeScript({target:{tabId:c.id},files:["contentScript.js"]},(()=>{chrome.tabs.sendMessage(c.id,{action:"getLocalStorage"},(function(e){e&&e.accessToken&&e.userInfo?chrome.storage.local.set({accessToken:e.accessToken,userInfo:e.userInfo},(function(){s(e)})):s(null)}))})):s(null)}))})),!0;"updateBadge"===c.action&&(c.badgeType,e())})),chrome.runtime.onMessageExternal.addListener((function(e,c,o){"getLocalStorage"===e.action&&o({accessToken:localStorage.getItem("accessToken"),userInfo:JSON.parse(localStorage.getItem("userInfo"))})})),chrome.alarms.create("fetchGasPrices",{periodInMinutes:1.5}),chrome.alarms.onAlarm.addListener((c=>{"fetchGasPrices"===c.name&&e()})),chrome.runtime.onStartup.addListener((()=>{chrome.storage.local.get("latestGasPrice",(e=>{e.latestGasPrice&&c(e.latestGasPrice)}))})),chrome.runtime.onInstalled.addListener((()=>{e()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,